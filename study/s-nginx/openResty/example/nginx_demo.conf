


# server {
#   listen 80;
#   location / {
#     content_by_lua '

#       ngx.say("hello, world")

#     ';
#   }
# }

# docker run -p 8000:80 -d --name openresty -v /Users/cong/code/my/bio/study/s-nginx/openResty/nginx.conf:/etc/nginx/conf.d/default.conf --privileged=true openresty/openresty

########

server {
  listen 80;
  location / {
    content_by_lua_file /etc/nginx/conf.d/hello.lua;
  }



  location /limit {
      access_by_lua_block {
          local limit_count = require "resty.limit.count"

          -- rate: 10/min 
          local lim, err = limit_count.new("100m", 2, 60)
          if not lim then
              ngx.log(ngx.ERR, "failed to instantiate a resty.limit.count object: ", err)
              return ngx.exit(500)
          end

          local key = ngx.var.binary_remote_addr
          local delay, err = lim:incoming(key, true)
          -- 如果请求数在限制范围内，则当前请求被处理的延迟（这种场景下始终为0，因为要么被处理要么被拒绝）和将被处理的请求的剩余数
          if not delay then
              if err == "rejected" then
                  return ngx.exit(503)
              end

              ngx.log(ngx.ERR, "failed to limit count: ", err)
              return ngx.exit(500)
          end
      }
  }
}